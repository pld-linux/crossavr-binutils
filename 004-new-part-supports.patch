--- gas/config/tc-avr.c	2012-09-05 16:01:12.000000000 +0530
+++ gas/config/tc-avr.c	2012-09-05 20:05:46.000000000 +0530
@@ -107,6 +107,7 @@ static struct mcu_type_s mcu_types[] =
   {"at90s8515",  AVR_ISA_AVR2,    bfd_mach_avr2},
   {"at90c8534",  AVR_ISA_AVR2,    bfd_mach_avr2},
   {"at90s8535",  AVR_ISA_AVR2,    bfd_mach_avr2},
+  {"ata5272",    AVR_ISA_AVR25,   bfd_mach_avr25},
   {"attiny13",   AVR_ISA_AVR25,   bfd_mach_avr25},
   {"attiny13a",  AVR_ISA_AVR25,   bfd_mach_avr25},
   {"attiny2313", AVR_ISA_AVR25,   bfd_mach_avr25},
@@ -131,6 +132,7 @@ static struct mcu_type_s mcu_types[] =
   {"attiny43u",  AVR_ISA_AVR25,   bfd_mach_avr25},
   {"attiny48",   AVR_ISA_AVR25,   bfd_mach_avr25},
   {"attiny88",   AVR_ISA_AVR25,   bfd_mach_avr25},
+  {"attiny828",  AVR_ISA_AVR25,   bfd_mach_avr25},
   {"at86rf401",  AVR_ISA_RF401,   bfd_mach_avr25},
   {"ata6289",    AVR_ISA_AVR25,   bfd_mach_avr25},
   {"at43usb355", AVR_ISA_AVR3,    bfd_mach_avr3},
@@ -140,12 +142,18 @@ static struct mcu_type_s mcu_types[] =
   {"attiny167",  AVR_ISA_AVR35,   bfd_mach_avr35},
   {"at90usb82",  AVR_ISA_AVR35,   bfd_mach_avr35},
   {"at90usb162", AVR_ISA_AVR35,   bfd_mach_avr35},
+  {"ata5505",    AVR_ISA_AVR35,   bfd_mach_avr35},
   {"atmega8u2",  AVR_ISA_AVR35,   bfd_mach_avr35},
   {"atmega16u2", AVR_ISA_AVR35,   bfd_mach_avr35},
   {"atmega32u2", AVR_ISA_AVR35,   bfd_mach_avr35},
+  {"attiny1634", AVR_ISA_AVR35,   bfd_mach_avr35},
   {"atmega8",    AVR_ISA_M8,      bfd_mach_avr4},
+  {"atmega8a",   AVR_ISA_M8,      bfd_mach_avr4},
+  {"ata6285",    AVR_ISA_AVR4,    bfd_mach_avr4},
+  {"ata6286",    AVR_ISA_AVR4,    bfd_mach_avr4},
   {"atmega48",   AVR_ISA_AVR4,    bfd_mach_avr4},
   {"atmega48a",  AVR_ISA_AVR4,    bfd_mach_avr4},
+  {"atmega48pa", AVR_ISA_AVR4,    bfd_mach_avr4},
   {"atmega48p",  AVR_ISA_AVR4,    bfd_mach_avr4},
   {"atmega88",   AVR_ISA_AVR4,    bfd_mach_avr4},
   {"atmega88a",  AVR_ISA_AVR4,    bfd_mach_avr4},
@@ -160,6 +168,9 @@ static struct mcu_type_s mcu_types[] =
   {"at90pwm3",   AVR_ISA_AVR4,    bfd_mach_avr4},
   {"at90pwm3b",  AVR_ISA_AVR4,    bfd_mach_avr4},
   {"at90pwm81",  AVR_ISA_AVR4,    bfd_mach_avr4},
+  {"at90pwm161", AVR_ISA_AVR5,    bfd_mach_avr5},
+  {"ata5790",    AVR_ISA_AVR5,    bfd_mach_avr5},
+  {"ata5795",    AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega16",   AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega16a",  AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega161",  AVR_ISA_M161,    bfd_mach_avr5},
@@ -167,17 +178,21 @@ static struct mcu_type_s mcu_types[] =
   {"atmega163",  AVR_ISA_M161,    bfd_mach_avr5},
   {"atmega164a", AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega164p", AVR_ISA_AVR5,    bfd_mach_avr5},
+  {"atmega164pa",AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega165",  AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega165a", AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega165p", AVR_ISA_AVR5,    bfd_mach_avr5},
+  {"atmega165pa",AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega168",  AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega168a", AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega168p", AVR_ISA_AVR5,    bfd_mach_avr5},
+  {"atmega168pa",AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega169",  AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega169a", AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega169p", AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega169pa",AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega32",   AVR_ISA_AVR5,    bfd_mach_avr5},
+  {"atmega32a",  AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega323",  AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega324a", AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega324p", AVR_ISA_AVR5,    bfd_mach_avr5},
@@ -202,6 +217,7 @@ static struct mcu_type_s mcu_types[] =
   {"atmega3290pa",AVR_ISA_AVR5,   bfd_mach_avr5},
   {"atmega406",  AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega64",   AVR_ISA_AVR5,    bfd_mach_avr5},
+  {"atmega64a",  AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega640",  AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega644",  AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega644a", AVR_ISA_AVR5,    bfd_mach_avr5},
@@ -220,7 +236,7 @@ static struct mcu_type_s mcu_types[] =
   {"atmega6490a",AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega6490p",AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega16hva",AVR_ISA_AVR5,    bfd_mach_avr5},
-  {"atmega16hva2",AVR_ISA_AVR5,    bfd_mach_avr5},
+  {"atmega16hva2",AVR_ISA_AVR5,   bfd_mach_avr5},
   {"atmega16hvb",AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega16hvbrevb",AVR_ISA_AVR5,bfd_mach_avr5},
   {"atmega32hvb",AVR_ISA_AVR5,    bfd_mach_avr5},
@@ -245,8 +261,10 @@ static struct mcu_type_s mcu_types[] =
   {"at94k",      AVR_ISA_94K,     bfd_mach_avr5},
   {"m3000",      AVR_ISA_AVR5,    bfd_mach_avr5},
   {"atmega128",  AVR_ISA_AVR51,   bfd_mach_avr51},
+  {"atmega128a", AVR_ISA_AVR51,   bfd_mach_avr51},
   {"atmega1280", AVR_ISA_AVR51,   bfd_mach_avr51},
   {"atmega1281", AVR_ISA_AVR51,   bfd_mach_avr51},
+  {"atmega1284", AVR_ISA_AVR51,   bfd_mach_avr51},
   {"atmega1284p",AVR_ISA_AVR51,   bfd_mach_avr51},
   {"atmega128rfa1",AVR_ISA_AVR51, bfd_mach_avr51},
   {"at90can128", AVR_ISA_AVR51,   bfd_mach_avr51},
@@ -255,26 +273,46 @@ static struct mcu_type_s mcu_types[] =
   {"atmega2560", AVR_ISA_AVR6,    bfd_mach_avr6},
   {"atmega2561", AVR_ISA_AVR6,    bfd_mach_avr6},
   {"atxmega16a4", AVR_ISA_XMEGA,  bfd_mach_avrxmega2},
+  {"atxmega16a4u",AVR_ISA_XMEGAU, bfd_mach_avrxmega2},
+  {"atxmega16c4", AVR_ISA_XMEGAU, bfd_mach_avrxmega2},
   {"atxmega16d4", AVR_ISA_XMEGA,  bfd_mach_avrxmega2},
   {"atxmega16x1", AVR_ISA_XMEGA,  bfd_mach_avrxmega2},
   {"atxmega32a4", AVR_ISA_XMEGA,  bfd_mach_avrxmega2},
+  {"atxmega32a4u",AVR_ISA_XMEGAU, bfd_mach_avrxmega2},
+  {"atxmega32c4", AVR_ISA_XMEGAU, bfd_mach_avrxmega2},
   {"atxmega32d4", AVR_ISA_XMEGA,  bfd_mach_avrxmega2},
   {"atxmega32x1", AVR_ISA_XMEGA,  bfd_mach_avrxmega2},
   {"atxmega64a3", AVR_ISA_XMEGA,  bfd_mach_avrxmega4},
+  {"atxmega64a3u",AVR_ISA_XMEGAU, bfd_mach_avrxmega4},
+  {"atxmega64a4u",AVR_ISA_XMEGAU, bfd_mach_avrxmega4},
+  {"atxmega64b1", AVR_ISA_XMEGAU, bfd_mach_avrxmega4},
+  {"atxmega64b3", AVR_ISA_XMEGAU, bfd_mach_avrxmega4},
+  {"atxmega64c3", AVR_ISA_XMEGAU,  bfd_mach_avrxmega4},
   {"atxmega64d3", AVR_ISA_XMEGA,  bfd_mach_avrxmega4},
   {"atxmega64a1", AVR_ISA_XMEGA,  bfd_mach_avrxmega5},
-  {"atxmega64a1u",AVR_ISA_XMEGA,  bfd_mach_avrxmega5},
+  {"atxmega64a1u",AVR_ISA_XMEGAU,  bfd_mach_avrxmega5},
   {"atxmega128a3", AVR_ISA_XMEGA, bfd_mach_avrxmega6},
+  {"atxmega128a3u",AVR_ISA_XMEGAU,bfd_mach_avrxmega6},
   {"atxmega128b1", AVR_ISA_XMEGA, bfd_mach_avrxmega6},
+  {"atxmega128b3", AVR_ISA_XMEGAU,bfd_mach_avrxmega6},
+  {"atxmega128c3", AVR_ISA_XMEGAU,bfd_mach_avrxmega6},
   {"atxmega128d3", AVR_ISA_XMEGA, bfd_mach_avrxmega6},
+  {"atxmega128d4", AVR_ISA_XMEGA, bfd_mach_avrxmega6},
   {"atxmega192a3", AVR_ISA_XMEGA, bfd_mach_avrxmega6},
+  {"atxmega192a3u",AVR_ISA_XMEGAU,bfd_mach_avrxmega6},
+  {"atxmega192c3", AVR_ISA_XMEGAU, bfd_mach_avrxmega6},
   {"atxmega192d3", AVR_ISA_XMEGA, bfd_mach_avrxmega6},
   {"atxmega256a3", AVR_ISA_XMEGA, bfd_mach_avrxmega6},
+  {"atxmega256a3u",AVR_ISA_XMEGAU,bfd_mach_avrxmega6},
   {"atxmega256a3b",AVR_ISA_XMEGA, bfd_mach_avrxmega6},
-  {"atxmega256a3bu",AVR_ISA_XMEGA,bfd_mach_avrxmega6},
+  {"atxmega256a3bu",AVR_ISA_XMEGAU,bfd_mach_avrxmega6},
+  {"atxmega256c3", AVR_ISA_XMEGAU,bfd_mach_avrxmega6},
   {"atxmega256d3", AVR_ISA_XMEGA, bfd_mach_avrxmega6},
+  {"atxmega384c3", AVR_ISA_XMEGAU,bfd_mach_avrxmega6},
+  {"atxmega384d3", AVR_ISA_XMEGA, bfd_mach_avrxmega6},
   {"atxmega128a1", AVR_ISA_XMEGA, bfd_mach_avrxmega7},
-  {"atxmega128a1u", AVR_ISA_XMEGA, bfd_mach_avrxmega7},
+  {"atxmega128a1u", AVR_ISA_XMEGAU, bfd_mach_avrxmega7},
+  {"atxmega128a4u", AVR_ISA_XMEGAU, bfd_mach_avrxmega7},
   {"attiny4",      AVR_ISA_AVRTINY, bfd_mach_avrtiny},
   {"attiny5",      AVR_ISA_AVRTINY, bfd_mach_avrtiny},
   {"attiny9",      AVR_ISA_AVRTINY, bfd_mach_avrtiny},
--- gas/doc/c-avr.texi	2012-09-05 15:59:12.000000000 +0530
+++ gas/doc/c-avr.texi	2012-09-05 20:03:45.000000000 +0530
@@ -46,7 +46,7 @@ space plus the MOVW instruction (MCU typ
 attiny2313a, attiny24, attiny24a, attiny4313, attiny44, attiny44a, attiny84,
 attiny84a, attiny25, attiny45, attiny85, attiny261, attiny261a, attiny461,
 attiny461a, attiny861, attiny861a, attiny87, attiny43u, attiny48, attiny88,
-at86rf401, ata6289).
+attiny828, at86rf401, ata6289, ata5272).
 
 Instruction set avr3 is for the classic AVR core with up to 128K program
 memory space (MCU types: at43usb355, at76c711).
@@ -55,59 +55,68 @@ Instruction set avr31 is for the classic
 memory space (MCU types: atmega103, at43usb320).
 
 Instruction set avr35 is for classic AVR core plus MOVW, CALL, and JMP
-instructions (MCU types: attiny167, at90usb82, at90usb162, atmega8u2,
-atmega16u2, atmega32u2).
+instructions (MCU types: attiny167, attiny1634, at90usb82, at90usb162,
+atmega8u2, atmega16u2, atmega32u2, ata5505).
 
 Instruction set avr4 is for the enhanced AVR core with up to 8K program
-memory space (MCU types: atmega48, atmega48a, atmega48p, atmega8, atmega88,
-atmega88a, atmega88p, atmega88pa, atmega8515, atmega8535, atmega8hva, at90pwm1,
-at90pwm2, at90pwm2b, at90pwm3, at90pwm3b, at90pwm81).
+memory space (MCU types: atmega48, atmega48a, atmega48pa, atmega48p, atmega8, 
+atmega8a, atmega88, atmega88a, atmega88p, atmega88pa, atmega8515, atmega8535, 
+atmega8hva, at90pwm1, at90pwm2, at90pwm2b, at90pwm3, at90pwm3b, at90pwm81, 
+ata6285, ata6286).
 
 Instruction set avr5 is for the enhanced AVR core with up to 128K program
-memory space (MCU types: atmega16, atmega16a, atmega161, atmega162, atmega163,
-atmega164a, atmega164p, atmega165, atmega165a, atmega165p, atmega168,
-atmega168a, atmega168p, atmega169, atmega169a, atmega169p, atmega169pa,
-atmega32, atmega323, atmega324a, atmega324p, atmega325, atmega325a, atmega325p,
-atmega325pa, atmega3250, atmega3250a, atmega3250p, atmega3250pa, atmega328,
-atmega328p, atmega329, atmega329a, atmega329p, atmega329pa, atmega3290,
-atmega3290a, atmega3290p, atmega3290pa, atmega406, atmega64, atmega640,
-atmega644, atmega644a, atmega644p, atmega644pa, atmega645, atmega645a,
-atmega645p, atmega6450, atmega6450a, atmega6450p, atmega649, atmega649a,
-atmega649p, atmega6490, atmega6490a, atmega6490p, atmega16hva, atmega16hva2,
-atmega16hvb, atmega16hvbrevb, atmega32hvb, atmega32hvbrevb, atmega64hve,
-at90can32, at90can64, at90pwm161, at90pwm216, at90pwm316, atmega32c1,
-atmega64c1, atmega16m1, atmega32m1, atmega64m1, atmega16u4, atmega32u4,
-atmega32u6, at90usb646, at90usb647, at94k, at90scr100).
+memory space (MCU types: at90pwm161, atmega16, atmega16a, atmega161, atmega162,
+atmega163, atmega164a, atmega164p, atmega164pa, atmega165, atmega165a, 
+atmega165p, atmega165pa, atmega168, atmega168a, atmega168p, atmega168pa, 
+atmega169, atmega169a, atmega169p, atmega169pa, atmega32, atmega323, atmega324a,
+atmega324p, atmega324pa, atmega325, atmega325a, atmega32, atmega32a, atmega323,
+atmega324a, atmega324p, atmega324pa, atmega325, atmega325a, atmega325p,
+atmega325p, atmega325pa, atmega3250, atmega3250a, atmega3250p, atmega3250pa, 
+atmega328, atmega328p, atmega329, atmega329a, atmega329p, atmega329pa, 
+atmega3290a, atmega3290p, atmega3290pa, atmega406, atmega64, atmega64a, 
+atmega640, atmega644, atmega644a, atmega644p, atmega644pa, atmega645, 
+atmega645a, atmega645p, atmega6450, atmega6450a, atmega6450p, atmega649, 
+atmega649a, atmega649p, atmega6490, atmega6490a, atmega6490p, atmega16hva, 
+atmega16hva2, atmega16hvb, atmega16hvbrevb, atmega32hvb, atmega32hvbrevb, 
+atmega64hve, at90can32, at90can64, at90pwm161, at90pwm216, at90pwm316, 
+atmega32c1, atmega64c1, atmega16m1, atmega32m1, atmega64m1, atmega16u4, 
+atmega32u4, atmega32u6, at90usb646, at90usb647, at94k, at90scr100,
+ata5790, ata5795).
 
 Instruction set avr51 is for the enhanced AVR core with exactly 128K program
-memory space (MCU types: atmega128, atmega1280, atmega1281, atmega1284p,
-atmega128rfa1, at90can128, at90usb1286, at90usb1287, m3000).
+memory space (MCU types: atmega128, atmega128a, atmega1280, atmega1281, 
+atmega1284, atmega1284p, atmega128rfa1, at90can128, at90usb1286, at90usb1287,
+m3000).
 
 Instruction set avr6 is for the enhanced AVR core with a 3-byte PC (MCU types:
 atmega2560, atmega2561).
 
 Instruction set avrxmega2 is for the XMEGA AVR core with 8K to 64K program
-memory space and less than 64K data space (MCU types: atxmega16a4, atxmega16d4,
-atxmega16x1, atxmega32a4, atxmega32d4, atxmega32x1).
+memory space and less than 64K data space (MCU types: atxmega16a4, atxmega16a4u,
+atxmega16c4, atxmega16d4, atxmega16x1, atxmega32a4, atxmega32a4u, atxmega32c4, 
+atxmega32d4, atxmega32x1).
 
 Instruction set avrxmega3 is for the XMEGA AVR core with 8K to 64K program
 memory space and greater than 64K data space (MCU types: none).
 
 Instruction set avrxmega4 is for the XMEGA AVR core with up to 64K program
-memory space and less than 64K data space (MCU types: atxmega64a3, atxmega64d3).
+memory space and less than 64K data space (MCU types: atxmega64a3, atxmega64a3u, 
+atxmega64a4u, atxmega64b1, atxmega64b3, atxmega64c3, atxmega64d3).
 
 Instruction set avrxmega5 is for the XMEGA AVR core with up to 64K program 
 memory space and greater than 64K data space (MCU types: atxmega64a1,
 atxmega64a1u).
 
-Instruction set avrxmega6 is for the XMEGA AVR core with up to 256K program
-memory space and less than 64K data space (MCU types: atxmega128a3,
-atxmega128d3, atxmega192a3, atxmega128b1, atxmega192d3, atxmega256a3, 
-atxmega256a3b, atxmega256a3bu, atxmega192d3).
+Instruction set avrxmega6 is for the XMEGA AVR core with larger than 64K program
+memory space and less than 64K data space (MCU types: atxmega128a3, 
+atxmega128a3u, atxmega128c3, atxmega128d3, atxmega128d4, atxmega192a3, 
+atxmega192a3u, atxmega128b1, atxmega128b3, atxmega192c3, atxmega192d3, 
+atxmega256a3, atxmega256a3u, atxmega256a3b, atxmega256a3bu, atxmega256c3, 
+atxmega256d3, atxmega384c3, atxmega256d3).
 
-Instruction set avrxmega7 is for the XMEGA AVR core with up to 256K program
+Instruction set avrxmega7 is for the XMEGA AVR core with larger than 64K program
 memory space and greater than 64K data space (MCU types: atxmega128a1,
-atxmega128a1u).
+atxmega128a1u, atxmega128a4u).
 
 @cindex @code{-mall-opcodes} command line option, AVR
 @item -mall-opcodes
